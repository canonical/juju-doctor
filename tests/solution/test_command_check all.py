
from typer.testing import CliRunner

from juju_doctor.main import app

"""\
Results
â”œâ”€â”€ Artifact
â”‚   â”œâ”€â”€ bundle
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
â”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed
â”‚   â”œâ”€â”€ show_unit
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
â”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed
â”‚   â•°â”€â”€ status
â”‚       â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
â”‚       â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
â”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
â”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
â”‚       â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed
â”œâ”€â”€ Parent
â”‚   â”œâ”€â”€ /tmp/tmpl6gtta4v/probes
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
â”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
â”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
â”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
â”‚   â•°â”€â”€ /tmp/tmpl6gtta4v/probes/tests_resources_probes_ruleset_small-dir
â”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed
â”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed
â”‚       â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed
â•°â”€â”€ Status
    â”œâ”€â”€ fail
    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)
    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)
    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
    â”‚   â•°â”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)
    â•°â”€â”€ pass
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed
        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed
        â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed

Total: ðŸŸ¢ 9 ðŸ”´ 6
"""  # noqa: E501


def test_all_ruleset_probe_result():
    result = "Results\nâ”œâ”€â”€ Artifact\nâ”‚   â”œâ”€â”€ bundle\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\nâ”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed\nâ”‚   â”œâ”€â”€ show_unit\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\nâ”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed\nâ”‚   â•°â”€â”€ status\nâ”‚       â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\nâ”‚       â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\nâ”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\nâ”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\nâ”‚       â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed\nâ”œâ”€â”€ Parent\nâ”‚   â”œâ”€â”€ /tmp/tmppchcrius/probes\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\nâ”‚   â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\nâ”‚   â”‚   â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\nâ”‚   â”‚   â•°â”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\nâ”‚   â•°â”€â”€ /tmp/tmppchcrius/probes/tests_resources_probes_ruleset_small-dir\nâ”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed\nâ”‚       â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed\nâ”‚       â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed\nâ•°â”€â”€ Status\n    â”œâ”€â”€ fail\n    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\n    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/bundle failed (Bundle probe here, something went wro...)\n    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\n    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/show_unit failed (I'm the show-unit probe, bad things h...)\n    â”‚   â”œâ”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\n    â”‚   â•°â”€â”€ ðŸ”´ tests_resources_probes_python_failing.py/status failed (I'm the status probe, and I failed)\n    â•°â”€â”€ pass\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/bundle passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/show_unit passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_python_passing.py/status passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/bundle passed\n        â”œâ”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/show_unit passed\n        â•°â”€â”€ ðŸŸ¢ tests_resources_probes_ruleset_small-dir/passing.py/status passed\n\n\nTotal: ðŸŸ¢ \x1b[1;36m9\x1b[0m ðŸ”´ \x1b[1;36m6\x1b[0m\n"  # noqa: E501

    # GIVEN a CLI Typer app
    runner = CliRunner()
    # WHEN the "check" command is executed on a failing file probe
    test_args = [
        "check",
        "--format",
        "tree",
        "--probe",
        "file://tests/resources/probes/ruleset/all.yaml",
        "--status=tests/resources/artifacts/status.yaml",
    ]
    result = runner.invoke(app, test_args)
    # THEN the command succeeds
    assert result.exit_code == 0
    # AND the Probe was correctly executed
    assert result.stdout == result.stdout


if __name__ == "__main__":
    test_all_ruleset_probe_result()
